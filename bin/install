#!/usr/bin/env bash
#------------------------------------------------------------------------------
# Copyright (c) 2011-2013, Think Big Analytics, Inc. All Rights Reserved.
# Copyright (c) 2013, Concurrent Thought. All Rights Reserved.
#------------------------------------------------------------------------------
# installer - Used to install Stampede.

thisdir=$(dirname ${BASH_SOURCE[0]})
[ "$thisdir" = '.' ] && thisdir=$PWD
thisdir_parent=$(dirname $thisdir)
[ "$thisdir_parent" = '.' ] && thisdir_parent=$PWD
[ -n "$STAMPEDE_HOME" ] || STAMPEDE_HOME=$thisdir_parent
export STAMPEDE_HOME

. $thisdir/common.sh

release_name=$(basename $thisdir_parent)

FILES_TO_INSTALL=( LICENSE README.md README.html VERSION FAQs.md Makefile
  bin contrib examples man test custom src )

# If sudo is required.
# Override SUDO_CMD on the command line to mock it for testing.
export SUDO=
: ${SUDO_CMD=sudo}

if [[ "$1" =~ --?h.* ]]
then
  cat <<EOF
$0 - Install Stampede. It will prompt you for information.

Usage: $0
EOF
exit 0
fi

function answer {
  default=$1
  shift
  lower_case=$1
  read answ
  [ -n "$answ" ] || answ="$default"
  if [ -n "$lower_case" ]
  then
    echo $answ | tr '[:upper:]' '[:lower:]'
  else
    echo $answ
  fi
}

function use_sudo {
  [ $# -gt 0 ] && echo2 "$@" 
  echo2 -n "Use sudo? [y/N=quit (default)] "
  if [ "$(answer n lower_case)" = 'y' ] 
  then
    echo2 "Using sudo."
    echo sudo
  else
    echo2 "NOT using sudo."
    return 1
  fi
}

# Copy to a target directory, if desired.

leave_it=1
echo2 "Stampede: installing $release_name:"
echo2 "Install Stampede somewhere else?"
echo2 "  Y: Ask me for a location."
echo2 "  n: Just leave it where it is."
echo2 -n "[Y/n] "
if [ "$(answer y lower_case)" = 'n' ]
then
  echo2 "Leaving the installation where it is."
  leave_it=0
fi


ln_name="/usr/local/stampede"
install_dir="/usr/local/$release_name"
if [ $leave_it -ne 0 ]
then
  echo2 -n "Specify where stampede should be installed: [$install_dir] "
  install_dir=$(answer "$install_dir")
  echo2 "Installing in \"$install_dir\":"
  ln_name="$(dirname $install_dir)/stampede"
  if [ -d "$install_dir" ]
  then
    echo2 "$install_dir already exists. Should I delete it first?"
    echo2 -n "[N=cancel/y=okay] "
    [ "$(answer n lower_case)" != y ] && exit 1

    while [ -d "$install_dir" ]
    do
      echo2 "Removing $install_dir:"
      $SUDO rm -rf "$install_dir"
      if [ $? -ne 0 ]
      then
        SUDO=$(use_sudo "I couldn't delete the directory \"$install_dir\".")
        [ $? -ne 0 ] && exit 1
      fi
    done
  fi
  while [ ! -d "$install_dir" ]
  do
    echo2 "Creating $install_dir:"
    $SUDO mkdir -p "$install_dir"
    if [ $? -ne 0 ]
    then
      SUDO=$(use_sudo "I couldn't create the installation directory \"$install_dir\".")
      [ $? -ne 0 ] && exit 1
    fi
  done

  if [ ! -w "$install_dir" -a -z "$SUDO" ]
  then
    SUDO=$(use_sudo "I can't copy into the directory \"$install_dir\".")
    [ $? -ne 0 ] && exit 1
  fi
  echo2 "Copying $STAMPEDE_HOME to $install_dir"
  for d in ${FILES_TO_INSTALL[@]}
  do
    echo2 "  Copying: $d"
    $SUDO cp -r $STAMPEDE_HOME/$d $install_dir/$d
    if [ $? -ne 0 ]
    then
      echo2 "I couldn't copy \"$STAMPEDE_HOME/$d\" into the directory \"$install_dir\"! Quitting..."
      exit 1
    fi
  done
  if [ "$install_dir" != "$ln_name" ]
  then
    echo2 "Creating a symlink between $install_dir and $ln_name:"
    $SUDO ln -s $install_dir $ln_name
  fi
fi

# Copy the examples/stampederc to the appropriate system place.

function copy_stampederc {
  target=$1
  parent_dir=$(dirname $target)
  $SUDO mkdir -p $parent_dir
  if [ ! -w "$parent_dir" -a -z "$SUDO" ]
  then
    SUDO=$(use_sudo "You don't have write permissions for the directory \"$install_dir\".")
    [ $? -ne 0 ] && return 1
    $SUDO mkdir -p $parent_dir
  fi    
  echo2 "Copying $STAMPEDE_HOME/examples/stampederc to $target:"
  $SUDO cp $STAMPEDE_HOME/examples/stampederc $target
  if [ $? -ne 0 ]
  then
    echo2 "I couldn't copy to $target."
    return 1
  fi
  return 0
}

while true
do
  echo2 "Specify a directory where a customizable \"stampederc\" file should be copied."
  echo2 "(We'll loop, so you can specify more than one if you want...)"
  echo2 "  1. $install_dir/etc/stampederc"
  echo2 "  2. /etc/stampederc"
  echo2 "  3. /etc/sysconfig/stampede"
  echo2 "  4. $HOME/.stampederc"
  echo2 "  5. You specify a directory."
  echo2 "  6. Skip this step and continue (default)."
  echo2 -n "[1/2/3/4/5/6 or any other key (default)] "
  case $(answer) in
    1) 
      copy_stampederc $install_dir/etc/stampederc
      [ $? -ne 0 ] && exit 1
      ;;
    2) 
      copy_stampederc /etc/stampederc
      [ $? -ne 0 ] && exit 1
      ;;
    3) 
      copy_stampederc /etc/sysconfig/stampede
      [ $? -ne 0 ] && exit 1
      ;;
    4) 
      copy_stampederc $HOME/.stampederc
      [ $? -ne 0 ] && exit 1
      ;;
    5) 
      echo2 "Target file name: "
      dir=$(answer)
      if [ "$dir" = "" ]
      then
        echo2 "Empty path specified. Skipping..."
      else
        copy_stampederc $dir
        [ $? -ne 0 ] && exit 1
      fi
      ;;
    *) 
      break
      ;;
  esac
done

echo2 "Finished! Please add $ln_name/bin to your PATH and $ln_name/man to your MANPATH."
echo2 "Then, run \"stampede --help\" for more information." 
